services:
  postgres:
    image: postgres:15
    container_name: restaurant_postgres
    environment:
      POSTGRES_DB: restaurant_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d restaurant_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  customer-api:
    build:
      context: .
      dockerfile: customer-api/Dockerfile
    container_name: restaurant_customer_api
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/restaurant_management
      JWT_SECRET: unified_jwt_secret_key_2024_secure_random_string_256_bits
      PORT: 5000
      NODE_ENV: development
      SEED_DATABASE: true
    volumes:
      - ./shared:/app/shared
      - ./customer-api/src:/app/src
      - ./customer-api/package.json:/app/package.json
      - customer_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  staff-api:
    build:
      context: .
      dockerfile: staff-api/Dockerfile
    container_name: restaurant_staff_api
    ports:
      - "5001:5001"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/restaurant_management
      JWT_SECRET: unified_jwt_secret_key_2024_secure_random_string_256_bits
      PORT: 5001
      NODE_ENV: development
    volumes:
      - ./shared:/app/shared
      - ./staff-api/src:/app/src
      - ./staff-api/package.json:/app/package.json
      - staff_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: restaurant_nginx
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - customer-api
      - staff-api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: restaurant_frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8080
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - frontend_node_modules:/app/node_modules
    depends_on:
      - nginx

volumes:
  postgres_data:
  customer_node_modules:
  staff_node_modules:
  frontend_node_modules:
